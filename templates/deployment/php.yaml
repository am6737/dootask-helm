{{- if .Values.php.enabled }}

# templates/php-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-php
  labels:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-php
spec:
  type: ClusterIP
  selector:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-php
  ports:
    - protocol: TCP
      port: {{ .Values.php.servicePort }}
      targetPort: 8080

---

# templates/php-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-php
spec:
  replicas: {{ .Values.php.replicas | default 1 }}
  selector:
    matchLabels:
      app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-php
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-php
      annotations:
        timestamp: {{ now | quote }}
    spec:
      # securityContext:
      #   fsGroup: 1000
      initContainers:
      - name: {{ .Release.Name }}-php-migrate-seed
        image: {{ .Values.php.image }}
        command: ["sh", "-c", "echo 'yes' | php artisan migrate --seed"]
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-app-vars
              optional: false
      containers:
      - name: {{ .Release.Name }}-php
        image: {{ .Values.php.image }}
        imagePullPolicy: {{ .Values.php.pullPolicy | default "IfNotPresent" }}
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp .env.test .env && php artisan key:generate"]
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: {{ .Values.php.memoryLimit  | default "1000Mi" | quote }}
            cpu: {{ .Values.php.cpuLimit | default "500m" | quote}}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-app-vars
              optional: false
        env:
          - name: LANG
            value: {{ .Values.php.lang | default "C.UTF-8" | quote }}
          - name: MODE
            value: {{ .Values.php.mode | default "production" | quote }}
          - name: MYSQL_HOST
            value: {{ .Values.env.database.host | default (printf "%s-mariadb.%s.svc.cluster.local" .Release.Name .Release.Namespace) | quote }}
          - name: MYSQL_PORT
            value: {{ .Values.env.database.port | quote }}
          - name: MYSQL_DB_NAME
            value: {{ .Values.env.database.name | quote }}
          - name: MYSQL_USERNAME
            value: {{ .Values.env.database.user | quote }}
          - name: MYSQL_PASSWORD
            value: {{ .Values.env.database.password | quote }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-app-vars
              optional: false
        volumeMounts:
          - name: crontab-conf
            mountPath: /etc/supervisor/conf.d/crontab.conf
            subPath: crontab.conf
          - name: php-conf
            mountPath: /etc/supervisor/conf.d/php.conf
            subPath: php.conf
          - name: php-ini
            mountPath: /usr/local/etc/php/php.ini
            subPath: php.ini
          - name: log-supervisor
            mountPath: /var/log/supervisor
          - name: env-config-volume
            mountPath: /var/www/.env.test
            subPath: .env
      - name: {{ .Release.Name }}-okr
        image: {{ .Values.okr.image }}
        imagePullPolicy: {{ .Values.okr.pullPolicy | default "IfNotPresent" }}
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: {{ .Values.okr.memoryLimit  | default "1000Mi" | quote }}
            cpu: {{ .Values.okr.cpuLimit | default "500m" | quote}}
        env:
          - name: DOO_TASK_URL
            value: "http://{{ .Values.ingress.appHost }}"
          - name: MYSQL_HOST
            value: {{ .Values.env.database.host | default (printf "%s-mariadb.%s.svc.cluster.local" .Release.Name .Release.Namespace) | quote }}
          - name: MYSQL_PORT
            value: {{ .Values.env.database.port | quote }}
          - name: MYSQL_DATABASE
            value: {{ .Values.env.database.name | quote }}
          - name: MYSQL_DBNAME
            value: {{ .Values.env.database.name | quote}}
          - name: MYSQL_USER
            value: {{ .Values.env.database.user | quote }}
          - name: MYSQL_USERNAME
            value: {{ .Values.env.database.user | quote}}
          - name: MYSQL_PASSWORD
            value: {{ .Values.env.database.password | quote}}
          - name: MYSQL_PREFIX
            value: {{ .Values.env.database.prefix | quote}}
          - name: DEMO_DATA
            value: "true"
          - name: KEY
            value: {{ .Values.env.app.key | quote }}
      serviceAccount: {{ .Release.Name }}-srv-account
      serviceAccountName: {{ .Release.Name }}-srv-account
      volumes:
        - name: crontab-conf
          configMap:
            name: {{ .Release.Name }}-php-crontab-conf
        - name: php-conf
          configMap:
            name: {{ .Release.Name }}-php-conf
        - name: php-ini
          configMap:
            name: {{ .Release.Name }}-php-ini
        - name: log-supervisor
          emptyDir: {}
        - name: env-config-volume
          configMap:
            name: {{ .Release.Name }}-app-vars

{{- end }}